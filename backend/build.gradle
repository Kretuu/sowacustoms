plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'pl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

tasks.register('processFrontendResources', Copy) {
	// Directory containing the artifacts in the frontend project
	def frontendBuildDir = file("${project(':frontend').buildDir}")
	// Directory where the frontend artifacts must be copied to be packaged alltogether with the backend by the 'war'
	// plugin.
	def frontendResourcesDir = file("${project.buildDir}/resources/main/public")

	group 'Frontend'
	description 'Process frontend resources'
	dependsOn project(':frontend').tasks.named('buildFrontendResources')
	dependsOn project(':frontend').tasks.named('assembleFrontend')

	from frontendBuildDir
	into frontendResourcesDir
}

tasks.named('processResources') {
	dependsOn tasks.named('processFrontendResources')
}
